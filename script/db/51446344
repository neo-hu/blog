<div class="article_content tracking-ad" data-dsm="post" data-mod="popu_307" id="article_content">
<div class="markdown_views"><p><strong>职位名称并不代表技能集</strong></p>
<p>作为一个前端开发人员，你是不是认为自己不需要懂很多技能？然而事实可能并非如此。</p>
<p>我在一个热门的工作论坛就前端开发工作做了一个快速搜索，发现有一个主题经常反复出现，那就是成为中级/高级前端开发者需要什么技能：</p>
<p>（X）HTML（5）、CSS、SASS / SCSS，LESS。</p>
<p>Backbone、Angular、Knockout。</p>
<p>响应式网页设计（例如Bootstrap知识、Foundation等）。</p>
<p>Adobe Photoshop、Magento。</p>
<p>源控制和某种形式的客户端单元测试的知识。</p>
<p>我对这些技能的看法;</p>
<p>HTML自1990年发明以来，其地位一直保持着相对不变。如果你不同意，不妨来看看第一个网页的源代码。 HTML的容易性，成为了它最大的优势，也成为了新手开发人员的无障碍通道。</p>
<p>CSS简单易学，但要非常擅长却是很难的。值得庆幸的是，SASS/SCSS和LESS等工具可以帮助我们。任何技术水平和任何程度经验的Web开发人员都可以在60分钟或更少的时间内学会使用这些CSS预处理器。简单又有效。</p>
<p>如果你善于响应式的网页设计，那恭喜你，你已经掌握了一个宝贵的技能。如果你像我一样，也不擅长于设计前端和框架——那也没关系，Bootstrap和Foundation等也可以帮助大多数开发人员掩盖此技能的差距。</p>
<p>Photoshop也有其专门的领域世界。其荒谬的复杂程度和它超乎想象的功能集刚好相匹配。甚至于会安装和运行就是一个卖点。</p>
<p>源代码控制。所有你需要知道的是：git push和git pull。</p>
<p><img alt="这里写图片描述" src="http://img.blog.csdn.net/20160518184107930" title=""/></p>
<p>当然也有很多开玩笑的观点和意见。我想表达的意思是，一个全栈的开发人员能够用最少的曝光和经验活跃在所有这些领域内。这些都不是专业的技能。这一结论我认为也适用于JavaScript开发者。比如说，在3个月的AngularJS接触后，你就差不多能够知道它是如何工作的，如何使用它，什么时候使用它，以及最重要的是，什么时候不使用它。</p>
<p>我不想成为前端开发人员，是因为我有更广泛的技能，我不想低价出售自己。</p>
<p>从咨询的角度</p>
<p>将自己描述为前端开发人员可能在短期内是有意义的。总的来说，现在的开发人员需求还是很大。在英国，甚至出现了明显的技术人员短缺，所以如果你表现出是这方面的专家或专业人士，或许有助于你拿到更优渥的薪酬。</p>
<p>比起作为前端开发人员，我发现明显拥有着大量全栈经验的前端开发人员的含金量更高。所以，我建议你在选择潜在雇主的同时，不妨更深层次地钻研你的技能。</p>
<p><strong>前端开发发展得太快</strong></p>
<p>说得夸张点，前端开发每天都有新的耀眼的JavaScript框架或我们“必须具备”的工具面世。网页作为一个平台正发展得越来越好。昨天，我们用的是PHP、ASP、.NET 、MVC、AngularJS/KnockoutJS/WhateverJS。明天，ReactJS或许会成为框架的首选（或者Aurelia将成为一个有力的竞争者）。 <br>
<img alt="这里写图片描述" src="http://img.blog.csdn.net/20160518184146587" title=""/></br></p>
<p>此外，还有无数的Web开发工具：Visual Studio、Code、Sublime、Webstorm、Dreamweaver（开玩笑的，谁会用用这玩意儿？！）、Eclipse、Netbeans、Notepad++、VIM、EMACS ……等等，数不胜数，无穷无尽。</p>
<p>最后的结果是，我花了数百个工时来学习的FrameworkX（同时也花了不少学费），只是因为它被认为已经死去就只能废弃不用。（还记得Silverlight吗？以及AngularJS 1.x也是同样如此）。这给我的感觉就是，即使我尽了最大的努力，投入了无数的时间和精力，但是我的技术水平实际上是降低的。</p>
<p>我不想成为前端开发人员，是因为我不能（也不愿）为了跟上潮流的趋势而疲于奔命。</p>
<p>前端开发人员也有可能不是设计师</p>
<p>我发现一般而言，技术人员可以被分为以下两类（当然并不包含所有情况）：</p>
<p>有逻辑的思想家，并且喜欢写代码</p>
<p>知道如何使事情变得更漂亮。</p>
<p>通常情况下，很多程序员不具备优秀的设计能力，反之亦然。</p>
<p>就我个人而言，我应该算在程序员的行列。当需要设计时，我会利用框架，如Bootstrap和Foundation，但我对设计真的并不擅长。</p>
<p>有一种看法是，前端开发人员既应该会编码，还得擅长设计（看看招聘广告对技能的要求就知道了，特别会提到要求Adobe Photoshop知识）。雇主雇用前端开发人员的目的就是——编写代码和设计漂亮的网站。我认为这是错的，这应该是两个独立的角色。</p>
<p>我不想成为前端开发人员，是因为我并不是一个特别厉害的设计师。雇主对于所谓的前端开发人员存在着不切实际的期望。</p>
<p>原文：<a href="http://www.developerhandbook.com/2015/06/25/why-i-dont-want-to-be-a-front-end-web-developer/">http://www.developerhandbook.com/2015/06/25/why-i-dont-want-to-be-a-front-end-web-developer/</a></p></div>

</div>